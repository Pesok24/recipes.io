{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { loadingStart, loadingSuccess, loadingError } from '../actioncreators/actionsSaga';\n\nconst fetchTodo = async () => {\n  return await (await fetch('/', {\n    method: 'POST'\n  })).json();\n};\n\nfunction* loadTodo() {\n  try {\n    yield put(loadingStart());\n    const result = yield call(fetchTodo);\n    yield put(loadingSuccess(result.todo));\n  } catch (error) {\n    yield put(loadingError(error.message));\n  }\n} // Функция-наблюдатель.\n\n\nfunction* saga() {\n  yield takeEvery({\n    type: 'IN'\n  }, loadTodo);\n}\n\nexport default saga;","map":{"version":3,"sources":["/Users/vladryb/elbrus/Proj/Своя игра/Came/src/redux/saga/sagas.js"],"names":["call","put","takeEvery","loadingStart","loadingSuccess","loadingError","fetchTodo","fetch","method","json","loadTodo","result","todo","error","message","saga","type"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,YAHF,QAIO,+BAJP;;AAMA,MAAMC,SAAS,GAAG,YAAY;AAC5B,SAAO,MAAM,CAAC,MAAMC,KAAK,CAAC,GAAD,EAAM;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAN,CAAZ,EAAuCC,IAAvC,EAAb;AACD,CAFD;;AAIA,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMT,GAAG,CAACE,YAAY,EAAb,CAAT;AACA,UAAMQ,MAAM,GAAG,MAAMX,IAAI,CAACM,SAAD,CAAzB;AACA,UAAML,GAAG,CAACG,cAAc,CAACO,MAAM,CAACC,IAAR,CAAf,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACI,YAAY,CAACQ,KAAK,CAACC,OAAP,CAAb,CAAT;AACD;AACF,C,CAED;;;AACA,UAAUC,IAAV,GAAiB;AACf,QAAMb,SAAS,CAAC;AAAEc,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAiBN,QAAjB,CAAf;AACD;;AAED,eAAeK,IAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport {\n  loadingStart,\n  loadingSuccess,\n  loadingError,\n} from '../actioncreators/actionsSaga';\n\nconst fetchTodo = async () => {\n  return await (await fetch('/', { method: 'POST' })).json();\n};\n\nfunction* loadTodo() {\n  try {\n    yield put(loadingStart());\n    const result = yield call(fetchTodo);\n    yield put(loadingSuccess(result.todo));\n  } catch (error) {\n    yield put(loadingError(error.message));\n  }\n}\n\n// Функция-наблюдатель.\nfunction* saga() {\n  yield takeEvery({ type: 'IN' }, loadTodo);\n}\n\nexport default saga;\n"]},"metadata":{},"sourceType":"module"}