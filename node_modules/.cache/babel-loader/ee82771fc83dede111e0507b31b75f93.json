{"ast":null,"code":"var _jsxFileName = \"/Users/vladryb/elbrus/Proj/\\u0421\\u0432\\u043E\\u044F \\u0438\\u0433\\u0440\\u0430/Came/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Login from './component/Login';\nimport Home from './component/Home';\nimport NavBar from './component/NavBar';\nimport SingUp from './component/SingUp';\nimport './App.css';\n\nfunction App(props) {\n  const store = useSelector(state => state);\n  console.log(store);\n  useEffect(() => {\n    async function question() {\n      const response = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8'\n        }\n      });\n      const result = await response.json();\n      console.log(result.todo);\n\n      if (result.session) {\n        props.addSession(result.session);\n        const user = result.session.name;\n        localStorage.setItem('session', true);\n        localStorage.setItem('user', user);\n      } else {\n        localStorage.setItem('session', false);\n        localStorage.setItem('user', '');\n      }\n    }\n\n    question();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    user: props.state.user,\n    logout: props.deleteSission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    state: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/singup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SingUp, {\n    state: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSession: session => {\n      return dispatch({\n        type: 'LOGIN',\n        session\n      });\n    },\n    deleteSission: () => {\n      return dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // export default App;","map":{"version":3,"sources":["/Users/vladryb/elbrus/Proj/Своя игра/Came/src/App.js"],"names":["React","useEffect","useState","connect","useDispatch","useSelector","BrowserRouter","Route","Login","Home","NavBar","SingUp","App","props","store","state","console","log","question","response","fetch","method","headers","result","json","todo","session","addSession","user","name","localStorage","setItem","deleteSission","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Login from './component/Login';\nimport Home from './component/Home';\nimport NavBar from './component/NavBar';\nimport SingUp from './component/SingUp';\nimport './App.css';\n\nfunction App(props) {\n  const store = useSelector((state) => state);\n  console.log(store);\n  useEffect(() => {\n    async function question() {\n      const response = await fetch('/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;charset=utf-8',\n        },\n      });\n      const result = await response.json();\n\n      console.log(result.todo);\n      if (result.session) {\n        props.addSession(result.session);\n\n        const user = result.session.name;\n        localStorage.setItem('session', true);\n        localStorage.setItem('user', user);\n      } else {\n        localStorage.setItem('session', false);\n        localStorage.setItem('user', '');\n      }\n    }\n    question();\n  }, []);\n\n  return (\n    <>\n      <BrowserRouter>\n        <NavBar user={props.state.user} logout={props.deleteSission} />\n\n        <Route exact path='/'>\n          <Home />\n        </Route>\n        <Route path='/login'>\n          <Login state={props} />\n        </Route>\n        <Route path='/singup'>\n          <SingUp state={props} />\n        </Route>\n      </BrowserRouter>\n    </>\n  );\n}\nconst mapStateToProps = (state) => {\n  return { state: state };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addSession: (session) => {\n      return dispatch({ type: 'LOGIN', session });\n    },\n    deleteSission: () => {\n      return dispatch({ type: 'LOGOUT' });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}