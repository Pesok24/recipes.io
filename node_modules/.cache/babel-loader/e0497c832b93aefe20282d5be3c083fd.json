{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { loadingStart, loadingTodo } from '../actioncreators/actionsSaga';\n\nconst fetchTodo = async () => {\n  return await (await fetch('/', {\n    method: 'POST'\n  })).json();\n};\n\nfunction* loadTodo() {\n  try {\n    yield put(loadingStart());\n    const result = yield call(fetchTodo);\n    yield put(loadingSuccess(result.todo));\n  } catch (error) {\n    yield put(loadingError(error.message));\n  }\n} // Функция-наблюдатель.\n\n\nfunction* saga() {\n  yield takeEvery({\n    type: 'IN'\n  }, loadTodo);\n}\n\nexport default saga;","map":{"version":3,"sources":["/Users/vladryb/elbrus/Proj/Своя игра/Came/src/redux/saga/sagas.js"],"names":["call","put","takeEvery","loadingStart","loadingTodo","fetchTodo","fetch","method","json","loadTodo","result","loadingSuccess","todo","error","loadingError","message","saga","type"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,+BAA1C;;AAEA,MAAMC,SAAS,GAAG,YAAY;AAC5B,SAAO,MAAM,CAAC,MAAMC,KAAK,CAAC,GAAD,EAAM;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAN,CAAZ,EAAuCC,IAAvC,EAAb;AACD,CAFD;;AAIA,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMR,GAAG,CAACE,YAAY,EAAb,CAAT;AACA,UAAMO,MAAM,GAAG,MAAMV,IAAI,CAACK,SAAD,CAAzB;AACA,UAAMJ,GAAG,CAACU,cAAc,CAACD,MAAM,CAACE,IAAR,CAAf,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACa,YAAY,CAACD,KAAK,CAACE,OAAP,CAAb,CAAT;AACD;AACF,C,CAED;;;AACA,UAAUC,IAAV,GAAiB;AACf,QAAMd,SAAS,CAAC;AAAEe,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAiBR,QAAjB,CAAf;AACD;;AAED,eAAeO,IAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { loadingStart, loadingTodo } from '../actioncreators/actionsSaga';\n\nconst fetchTodo = async () => {\n  return await (await fetch('/', { method: 'POST' })).json();\n};\n\nfunction* loadTodo() {\n  try {\n    yield put(loadingStart());\n    const result = yield call(fetchTodo);\n    yield put(loadingSuccess(result.todo));\n  } catch (error) {\n    yield put(loadingError(error.message));\n  }\n}\n\n// Функция-наблюдатель.\nfunction* saga() {\n  yield takeEvery({ type: 'IN' }, loadTodo);\n}\n\nexport default saga;\n"]},"metadata":{},"sourceType":"module"}