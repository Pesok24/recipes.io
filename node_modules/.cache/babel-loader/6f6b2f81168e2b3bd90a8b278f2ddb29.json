{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { loadingStart, loadingTodo } from '../actioncreators/actionsSaga';\nimport actionType from '../actions';\n\nconst fetchTodo = async () => {\n  return await (await fetch('/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  })).json();\n};\n\nfunction* loadTodo() {\n  try {\n    yield put(loadingStart());\n    const result = yield call(fetchTodo);\n    yield put(loadingTodo(result.todo));\n  } catch (error) {\n    console.log(error);\n  }\n} // Функция-наблюдатель.\n\n\nfunction* sagas() {\n  yield takeEvery(actionType.saga, loadTodo);\n}\n\nexport default sagas;","map":{"version":3,"sources":["/home/mike/Came/src/redux/saga/sagas.js"],"names":["call","put","takeEvery","loadingStart","loadingTodo","actionType","fetchTodo","fetch","method","headers","json","loadTodo","result","todo","error","console","log","sagas","saga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,+BAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACA,MAAMC,SAAS,GAAG,YAAY;AAC5B,SAAO,MAAM,CACX,MAAMC,KAAK,CAAC,GAAD,EAAM;AACfC,IAAAA,MAAM,EAAE,MADO;AAEfC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFM,GAAN,CADA,EAOXC,IAPW,EAAb;AAQD,CATD;;AAWA,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMV,GAAG,CAACE,YAAY,EAAb,CAAT;AACA,UAAMS,MAAM,GAAG,MAAMZ,IAAI,CAACM,SAAD,CAAzB;AACA,UAAML,GAAG,CAACG,WAAW,CAACQ,MAAM,CAACC,IAAR,CAAZ,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,C,CAED;;;AACA,UAAUG,KAAV,GAAkB;AAChB,QAAMf,SAAS,CAACG,UAAU,CAACa,IAAZ,EAAkBP,QAAlB,CAAf;AACD;;AAED,eAAeM,KAAf","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { loadingStart, loadingTodo } from '../actioncreators/actionsSaga';\nimport actionType from '../actions';\nconst fetchTodo = async () => {\n  return await (\n    await fetch('/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n    })\n  ).json();\n};\n\nfunction* loadTodo() {\n  try {\n    yield put(loadingStart());\n    const result = yield call(fetchTodo);\n    yield put(loadingTodo(result.todo));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// Функция-наблюдатель.\nfunction* sagas() {\n  yield takeEvery(actionType.saga, loadTodo);\n}\n\nexport default sagas;\n"]},"metadata":{},"sourceType":"module"}